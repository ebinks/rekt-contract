{
  "contractName": "HelpMe",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "vmError",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "useAllGas",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060b28061001f6000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638c29f8d414604e578063d695d178146062575b600080fd5b348015605957600080fd5b5060606076565b005b348015606d57600080fd5b5060746081565b005b60001515607f57fe5b565b600080fd00a165627a7a72305820ccc53833e0d9d84cc4b2827d4ffce65e09e9c27b78d626acec01a80c94ec81d40029",
  "deployedBytecode": "0x6080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638c29f8d414604e578063d695d178146062575b600080fd5b348015605957600080fd5b5060606076565b005b348015606d57600080fd5b5060746081565b005b60001515607f57fe5b565b600080fd00a165627a7a72305820ccc53833e0d9d84cc4b2827d4ffce65e09e9c27b78d626acec01a80c94ec81d40029",
  "sourceMap": "26:318:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:318:0;;;;;;;",
  "deployedSourceMap": "26:318:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;300:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;300:42:0;;;;;;263:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:34:0;;;;;;300:42;332:5;325:13;;;;;;300:42::o;263:34::-;285:8;;",
  "source": "pragma solidity ^0.4.19;\n\ncontract HelpMe {\n\t/*function stackTooDeep(\n\t\tuint _a,\n\t\tuint _b,\n\t\tuint _c,\n\t\tuint _d,\n\t\tuint _e,\n\t\tuint _f,\n\t\tuint _g,\n\t\tuint _h,\n\t\tuint _i,\n\t\tuint _j,\n\t\tuint _k,\n\t\tuint _l,\n\t\tuint _m,\n\t\tuint _n,\n\t\tuint _o,\n\t\tuint _p,\n\t\tuint _q){}*/\n\n\tfunction vmError(){\n\t\trevert();\n\t}\n\n\tfunction useAllGas() {\n\t\tassert(false);\n\t}\n}",
  "sourcePath": "/home/elizabeth/Documents/rektcontracts/contracts/HelpMe.sol",
  "ast": {
    "absolutePath": "/home/elizabeth/Documents/rektcontracts/contracts/HelpMe.sol",
    "exportedSymbols": {
      "HelpMe": [
        17
      ]
    },
    "id": 18,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17
        ],
        "name": "HelpMe",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7,
              "nodeType": "Block",
              "src": "281:16:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37,
                        38
                      ],
                      "referencedDeclaration": 37,
                      "src": "285:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 5,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "285:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6,
                  "nodeType": "ExpressionStatement",
                  "src": "285:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 8,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "vmError",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "281:0:0"
            },
            "scope": 17,
            "src": "263:34:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "321:21:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "332:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "325:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "325:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "325:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 16,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "useAllGas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "321:0:0"
            },
            "scope": 17,
            "src": "300:42:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 18,
        "src": "26:318:0"
      }
    ],
    "src": "0:344:0"
  },
  "legacyAST": {
    "absolutePath": "/home/elizabeth/Documents/rektcontracts/contracts/HelpMe.sol",
    "exportedSymbols": {
      "HelpMe": [
        17
      ]
    },
    "id": 18,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17
        ],
        "name": "HelpMe",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7,
              "nodeType": "Block",
              "src": "281:16:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37,
                        38
                      ],
                      "referencedDeclaration": 37,
                      "src": "285:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 5,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "285:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6,
                  "nodeType": "ExpressionStatement",
                  "src": "285:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 8,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "vmError",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "281:0:0"
            },
            "scope": 17,
            "src": "263:34:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "321:21:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "332:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "325:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "325:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "325:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 16,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "useAllGas",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "321:0:0"
            },
            "scope": 17,
            "src": "300:42:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 18,
        "src": "26:318:0"
      }
    ],
    "src": "0:344:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x065f97c0065d53c996c365fb82edb34322d7b445",
      "transactionHash": "0x0c249a3eac81dc34c460b1087ab6ec072d1c27f32f2620596c9519cd32ee8c09"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-05T20:52:30.408Z"
}